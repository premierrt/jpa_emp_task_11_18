git rebase vs merge 
To_do:
----rest client dla 
https://jsonplaceholder.typicode.com/users
https://spring.io/guides/gs/consuming-rest/  
--dodac tez mocki z wiremockiem
--tool do mapowania json - java i generowania klass , ew oniline --> http://www.jsonschema2pojo.org/
--ew. spring integration lub cos innego 
--mapowanie -> http://mapstruct.org/
-async https://spring.io/guides/gs/async-method/
--cqrs, event sourcing https://dzone.com/articles/spring-boot-akka-event-sourcing-starter-part-1


To_do:
--dodac FindBug i sonar

----rest client dla 
https://jsonplaceholder.typicode.com/users
https://spring.io/guides/gs/consuming-rest/  
[v] get

[v] - post
--dodac wywolanie resttemplate dla POST, wtedy trzeba zrobic objekt jsona, bo parametry w post w body idą...
https://www.baeldung.com/rest-template
http://bykowski.pl/spring-boot-integracja-z-rest-api-na-przykladzie-resttemplate/
https://stackoverflow.com/questions/4075991/post-request-via-resttemplate-in-json/27106518

--dodac tez mocki z wiremockiem
--tool do mapowania json - java i generowania klass , ew oniline --> http://www.jsonschema2pojo.org/
--ew. spring integration lub cos innego 
--zapisywac pobrane dane do bazy z serwisu --> mapowanie -> http://mapstruct.org/ 
-async https://spring.io/guides/gs/async-method/
--cqrs, event sourcing https://dzone.com/articles/spring-boot-akka-event-sourcing-starter-part-1
--Docker z rabbitmq

 [v] dodalem wstrzykiwanie valu przez konstruktor w klasie pod testami.
 https://stackoverflow.com/questions/17353327/populating-spring-value-during-unit-test
-dopisac test, ktory bedzie korzystal z propertisow, ktore beda mialy mocka -test.props
 * https://www.logicbig.com/tutorials/spring-framework/spring-core/test-property-source-annotation.html

--debug
--import * i import static


Model:
Empoyee >---< Task  ( w bazie emp >---emp_task ---< task )


!!!!git - merge rebase squash
https://developer.atlassian.com/blog/2014/12/pull-request-merge-strategies-the-great-debate/ 


https://spring.io/guides/gs/accessing-data-jpa/
http://www.springboottutorial.com/introduction-to-jpa-with-spring-boot-data-jpa
https://www.callicoder.com/hibernate-spring-boot-jpa-many-to-many-mapping-example/

[v] lombok
https://projectlombok.org/setup/eclipse


	private Collection<Employee> employees = new ArrayList<Employee>();

	
	
--lazy loading
https://grokonez.com/hibernate/use-hibernate-lazy-fetch-eager-fetch-type-spring-boot-mysql


TO_DO:
--jak sie robi update entity w spring data jpa? dodać test do tego.
https://stackoverflow.com/questions/11881479/how-do-i-update-an-entity-using-spring-data-jpa

--jpa dziedziczenie - inherirance
https://www.baeldung.com/hibernate-inheritance



-jpa custom queryr
http://blog.mloza.pl/spring-boot-interakcja-z-baza-danych-czyli-spring-data-jpa/


--http put vs patch
https://www.baeldung.com/http-put-patch-difference-spring

--rest
https://spring.io/guides/tutorials/rest/
https://www.restapitutorial.com/lessons/httpmethods.html


--optional zwrocony przez findByID
https://stackoverflow.com/questions/49316751/spring-data-jpa-findone-change-to-optional-how-to-use-this


[v]-test serwisu uzywającego repo
https://springframework.guru/mockito-mock-vs-spy-in-spring-boot-tests/
https://stackabuse.com/how-to-test-a-spring-boot-application/
https://github.com/pkainulainen/spring-data-jpa-examples/blob/master/tutorial-part-seven/src/test/java/net/petrikainulainen/spring/datajpa/service/RepositoryPersonServiceTest.java
http://www.vogella.com/tutorials/Hamcrest/article.html


1.[v] zrebazowac master i sobota
-- rest z jpa : https://spring.io/guides/tutorials/rest/
--lokalny merge
-- api 
[v]- swagger  --> https://www.baeldung.com/swagger-2-documentation-for-spring-rest-api
http://localhost:8080/swagger-ui.html
--spring securiy
-- logowanie - logback i slauth
[v] testy 
-- HATEOAS
[v] collection, list, arraylist
--debug z eclipse i podlaczenia sie do zdalnej aplikacji
--ci/cd ??? github -> do lokalnego jenkinsa na dockerze
--jprofiler
--zrobic dockera tak jak w https://github.com/premierrt/microservice_eureka_server/blob/master/pom.xml 
[v --] junit /mockito /hamcrest
-git rebase http://www.pzielinski.com/?p=2652
--rozdzielic na 2 moduly


https://www.baeldung.com/java-profilers



----json blad
http://springquay.blogspot.com/2016/01/new-approach-to-solve-json-recursive.html



---
http://localhost:8080/swagger-ui.html#
